// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/filesystem.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CleanupFileSystemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanupFileSystemRequest) Reset() {
	*x = CleanupFileSystemRequest{}
	mi := &file_proto_filesystem_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanupFileSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupFileSystemRequest) ProtoMessage() {}

func (x *CleanupFileSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filesystem_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupFileSystemRequest.ProtoReflect.Descriptor instead.
func (*CleanupFileSystemRequest) Descriptor() ([]byte, []int) {
	return file_proto_filesystem_proto_rawDescGZIP(), []int{0}
}

type CleanupFileSystemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanupFileSystemResponse) Reset() {
	*x = CleanupFileSystemResponse{}
	mi := &file_proto_filesystem_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanupFileSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupFileSystemResponse) ProtoMessage() {}

func (x *CleanupFileSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filesystem_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupFileSystemResponse.ProtoReflect.Descriptor instead.
func (*CleanupFileSystemResponse) Descriptor() ([]byte, []int) {
	return file_proto_filesystem_proto_rawDescGZIP(), []int{1}
}

type GetLogsFileSystemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsFileSystemRequest) Reset() {
	*x = GetLogsFileSystemRequest{}
	mi := &file_proto_filesystem_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsFileSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsFileSystemRequest) ProtoMessage() {}

func (x *GetLogsFileSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filesystem_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsFileSystemRequest.ProtoReflect.Descriptor instead.
func (*GetLogsFileSystemRequest) Descriptor() ([]byte, []int) {
	return file_proto_filesystem_proto_rawDescGZIP(), []int{2}
}

func (x *GetLogsFileSystemRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type GetLogsFileSystemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsFileSystemResponse) Reset() {
	*x = GetLogsFileSystemResponse{}
	mi := &file_proto_filesystem_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsFileSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsFileSystemResponse) ProtoMessage() {}

func (x *GetLogsFileSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filesystem_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsFileSystemResponse.ProtoReflect.Descriptor instead.
func (*GetLogsFileSystemResponse) Descriptor() ([]byte, []int) {
	return file_proto_filesystem_proto_rawDescGZIP(), []int{3}
}

var File_proto_filesystem_proto protoreflect.FileDescriptor

const file_proto_filesystem_proto_rawDesc = "" +
	"\n" +
	"\x16proto/filesystem.proto\x12\x13proto.filesystem.v1\"\x1a\n" +
	"\x18CleanupFileSystemRequest\"\x1b\n" +
	"\x19CleanupFileSystemResponse\"*\n" +
	"\x18GetLogsFileSystemRequest\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\"\x1b\n" +
	"\x19GetLogsFileSystemResponse2\xeb\x01\n" +
	"\x11FileSystemService\x12j\n" +
	"\aCleanup\x12-.proto.filesystem.v1.CleanupFileSystemRequest\x1a..proto.filesystem.v1.CleanupFileSystemResponse\"\x00\x12j\n" +
	"\aGetLogs\x12-.proto.filesystem.v1.GetLogsFileSystemRequest\x1a..proto.filesystem.v1.GetLogsFileSystemResponse\"\x00B\x15Z\x13proto/filesystem/v1b\x06proto3"

var (
	file_proto_filesystem_proto_rawDescOnce sync.Once
	file_proto_filesystem_proto_rawDescData []byte
)

func file_proto_filesystem_proto_rawDescGZIP() []byte {
	file_proto_filesystem_proto_rawDescOnce.Do(func() {
		file_proto_filesystem_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_filesystem_proto_rawDesc), len(file_proto_filesystem_proto_rawDesc)))
	})
	return file_proto_filesystem_proto_rawDescData
}

var file_proto_filesystem_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_filesystem_proto_goTypes = []any{
	(*CleanupFileSystemRequest)(nil),  // 0: proto.filesystem.v1.CleanupFileSystemRequest
	(*CleanupFileSystemResponse)(nil), // 1: proto.filesystem.v1.CleanupFileSystemResponse
	(*GetLogsFileSystemRequest)(nil),  // 2: proto.filesystem.v1.GetLogsFileSystemRequest
	(*GetLogsFileSystemResponse)(nil), // 3: proto.filesystem.v1.GetLogsFileSystemResponse
}
var file_proto_filesystem_proto_depIdxs = []int32{
	0, // 0: proto.filesystem.v1.FileSystemService.Cleanup:input_type -> proto.filesystem.v1.CleanupFileSystemRequest
	2, // 1: proto.filesystem.v1.FileSystemService.GetLogs:input_type -> proto.filesystem.v1.GetLogsFileSystemRequest
	1, // 2: proto.filesystem.v1.FileSystemService.Cleanup:output_type -> proto.filesystem.v1.CleanupFileSystemResponse
	3, // 3: proto.filesystem.v1.FileSystemService.GetLogs:output_type -> proto.filesystem.v1.GetLogsFileSystemResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_filesystem_proto_init() }
func file_proto_filesystem_proto_init() {
	if File_proto_filesystem_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_filesystem_proto_rawDesc), len(file_proto_filesystem_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_filesystem_proto_goTypes,
		DependencyIndexes: file_proto_filesystem_proto_depIdxs,
		MessageInfos:      file_proto_filesystem_proto_msgTypes,
	}.Build()
	File_proto_filesystem_proto = out.File
	file_proto_filesystem_proto_goTypes = nil
	file_proto_filesystem_proto_depIdxs = nil
}
