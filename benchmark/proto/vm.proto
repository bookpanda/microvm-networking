syntax = "proto3";

package proto.vm.v1;

option go_package = "proto/vm/v1";

service VmService {
  rpc Create(CreateVmRequest) returns (CreateVmResponse){}
  rpc SendServerCommand(SendServerCommandVmRequest) returns (SendServerCommandVmResponse){}
  rpc SendClientCommand(SendClientCommandVmRequest) returns (stream SendClientCommandVmResponse){}
  rpc TrackSyscalls(TrackSyscallsVmRequest) returns (TrackSyscallsVmResponse){}
  rpc StopSyscalls(StopSyscallsVmRequest) returns (StopSyscallsVmResponse){}
  rpc Cleanup(CleanupVmRequest) returns (CleanupVmResponse){}
}

message Vm{
  string ip = 1;
  string kernelPath = 3;
  string rootfsPath = 4;
}

message CreateVmRequest{
  string ip = 1;
  string kernelPath = 2;
  string rootfsPath = 3;
}

message CreateVmResponse{
  Vm vm = 1;
}

message SendServerCommandVmRequest{
  string ip = 1;
  string command = 2;
  bool wait = 3;
}

message SendServerCommandVmResponse{
  string output = 1;
}

message SendClientCommandVmRequest{
  string ip = 1;
  string command = 2;
}

message SendClientCommandVmResponse{
  string output = 1;
}

message TrackSyscallsVmRequest{
}

message TrackSyscallsVmResponse{
}

message StopSyscallsVmRequest{
}

message StopSyscallsVmResponse{
}

message CleanupVmRequest{
}

message CleanupVmResponse{
}
